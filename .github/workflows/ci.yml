name: ðŸš€ On Push

on:
  push:

# env:
#   SENTRY_AUTH_TOKEN: '${{ secrets.SENTRY_AUTH_TOKEN }}'
#   SENTRY_DSN: '${{ secrets.SENTRY_DSN }}'
#   SENTRY_ORG: '${{ secrets.SENTRY_ORG }}'
#   SENTRY_PROJECT: '${{ secrets.SENTRY_PROJECT }}'
#   SENTRY_URL: '${{ secrets.SENTRY_URL }}'

jobs:
  cache-dependencies:
    name: ðŸ“„ Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # - name: Cache yarn dependencies and cypress
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       node_modules
      #     key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-v1
      - name: Install dependencies if cache invalid
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

  lint:
    name: ðŸ”Ž Lint
    runs-on: ubuntu-latest
    needs:
      - cache-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16
          # cache: 'npm'
      # - name: Restore yarn dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       node_modules
      #     key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-v1
      - name: Run lint
        run: npm install
        run: npm run lint

  test:
    name: ðŸ§ª Unit Tests
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16
          # cache: 'npm'
      # - name: Setup node env
      #   uses: actions/setup-node@v2.1.2
      #   with:
      #     node-version: 16
      # - name: Restore yarn dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       node_modules
      #     key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-v1
      - name: Run tests
        run: npm run test

  build:
    name: ðŸ“¦ Build Next.js
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16
          # cache: 'npm'
      # - name: Setup node env
      #   uses: actions/setup-node@v2.1.2
      #   with:
      #     node-version: 16
      # - name: Restore yarn dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       node_modules
      #     key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-v1
      - name: Build Next.js
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: next-build
          path: .next

  e2e:
    name: ðŸ§ª End To End Tests
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16
          # cache: 'npm'
      # - name: Setup node env
      #   uses: actions/setup-node@v2.1.2
      #   with:
      #     node-version: 16
      # - name: Restore yarn dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       node_modules
      #     key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-v1
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: next-build
          path: .next
      - name: Run e2e test
        run: npm run e2e:test

  # release:
  #   name: ðŸš€ Release
  #   needs:
  #     - e2e
  #     - test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup node env
  #       uses: actions/setup-node@v2.1.2
  #       with:
  #         node-version: 16
  #     - name: Restore yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           node_modules
  #         key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-v1
  #     - name: Release
  #       run: yarn release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
